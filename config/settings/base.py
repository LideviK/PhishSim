"""
Django settings for PhishSim project.

Generated by 'django-admin startproject' using Django 3.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

import os
from pathlib import Path
from dotenv import load_dotenv, find_dotenv
from django.urls import reverse_lazy

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'xs9onx5wf_(g&0yl3uo6&f@3y4zj7w(&8sr^u!@p1qodudtkdi'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# ============================ DOT ENV CONFIG ================================
load_dotenv(find_dotenv())

if os.environ.get("ENV_PATH"):
    env_path = os.environ.get("ENV_PATH")
    load_dotenv(dotenv_path=env_path)

# ============================================================================


# Application definition
#
# INSTALLED_APPS = [
#
#     # ------------ API (v1) ---------------
#     'v1.accounts.apps.AccountsConfig',
#     'v1.company.apps.CompanyConfig',
#     'v1.user.apps.UserConfig',
#     # -------------------------------------
#
#     'django.contrib.admin',
#     'django.contrib.auth',
#     'django.contrib.contenttypes',
#     'django.contrib.sessions',
#     'django.contrib.messages',
#     'django.contrib.staticfiles',
#     'django.contrib.sites',
#
#     # -------- EXTERNAL DEPS --------------
#     'corsheaders',
#     'rest_framework',
#     'rest_framework.authtoken',
#     'rest_auth',
#     'allauth',
#     'allauth.account',
#     'rest_auth.registration',
#     'allauth.socialaccount',
#     # "rest_framework_api_key",
#     # 'rest_framework_jwt',
#     'sendgrid',
#     # -------------------------------------
#
# ]
INSTALLED_APPS = [
    'v1.accounts.apps.AccountsConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    # 'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',

    'rest_framework',
    'rest_framework.authtoken',
    'rest_auth',

    'allauth',
    'allauth.account',
    'rest_auth.registration',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.facebook',
    # 'rest_framework_swagger',
    'django.contrib.messages',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates'), ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

# =========================== STATIC DIR CONFIG ==========================
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')
# ========================================================================


CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_CREDENTIALS = False
SLACKBOT_USE_THREADS = True

# ============================ DJANGO RESET CONFIG =========================
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
    )
}

SITE_ID = 1
# ==========================================================================

# ======================== DJANGO ALLAUTH CONFIG ===========================

AUTHENTICATION_BACKENDS = ['django.contrib.auth.backends.ModelBackend',
                           'allauth.account.auth_backends.AuthenticationBackend']

EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

ACCOUNT_USERNAME_REQUIRED = False

ACCOUNT_EMAIL_REQUIRED = True

ACCOUNT_CONFIRM_EMAIL_ON_GET = True

ACCOUNT_AUTHENTICATION_METHOD = 'email'

ACCOUNT_EMAIL_VERIFICATION = 'mandatory'

# ACCOUNT_ADAPTER = 'v1.accounts.custom_allauth.AccountAdapter'

EMAIL_CONFIRMATION_ANONYMOUS_REDIRECT_URL = reverse_lazy('account_confirm_complete')

# ==========================================================================

# =========================== EMAIL CONFIG (SMTP) ==========================

# --------------------------------------------------------------------------

# EMAIL_BACKEND = 'django_smtp_ssl.SSLEmailBackend'
# EMAIL_HOST = 'smtp.mailtrap.io'
# EMAIL_HOST_USER = 'bd475eb8b8db5f'
# EMAIL_HOST_PASSWORD = '3fd14452552e14'
# EMAIL_PORT = '2525'
# EMAIL_USE_TLS = False
# DEFAULT_FROM_EMAIL = 'noreply-625aa8@inbox.mailtrap.io'

# DEFAULT_FROM_EMAIL = EMAIL_HOST_USER

# --------------------------- SENDGRID --------------------------------------

# SENDGRID_API_KEY = os.getenv('SENDGRID_API_KEY')

# EMAIL_BACKEND = os.getenv('EMAIL_BACKEND')
# EMAIL_HOST = "smtp.sendgrid.net"
# EMAIL_HOST_USER = "apikey"
# EMAIL_HOST_PASSWORD = SENDGRID_API_KEY
# EMAIL_PORT = 587
# EMAIL_USE_TLS = False


# DEFAULT_FROM_EMAIL = "no-reply@phishsim.com"
# SENDGRID_SANDBOX_MODE_IN_DEBUG = False
# SENDGRID_ECHO_TO_STDOUT = True


# --------------------------------------------------------------------------


# ==========================================================================

# ============================ LOGGING =====================================
DEFAULT_LOGGER = 'db'

# LOGGING = {
#     'version': 1,
#     'disable_existing_loggers': False,
#     'handlers': {
#         'console': {
#             'level': 'DEBUG',
#             'class': 'logging.StreamHandler',
#         },
#         'db_log': {
#             'level': 'DEBUG',
#             'class': 'django_db_logger.db_log_handler.DatabaseLogHandler'
#         },
#     },
#     'loggers': {
#         'django': {
#             'handlers': ['console'],
#             'level': os.getenv('DJANGO_LOG_LEVEL', 'INFO'),
#         },
#         'django.request': {
#             'handlers': ['console'],
#             'level': os.getenv('DJANGO_LOG_LEVEL', 'INFO'),
#         },
#         'v1.accounts.app_templates.base': {
#             'handlers': ['console', 'db_log'],
#             'level': os.getenv('DJANGO_LOG_LEVEL', 'INFO'),
#         },
#         'v1.accounts.models.filter': {
#             'handlers': ['console', 'db_log'],
#             'level': os.getenv('DJANGO_LOG_LEVEL', 'INFO'),
#         },
#         'db': {
#             'handlers': ['console', 'db_log'],
#             'level': os.getenv('DJANGO_LOG_LEVEL', 'INFO'),
#         },
#     },
# }

# ===============================================================================


# ========================== REST AUTH MODEL ====================================
AUTH_USER_MODEL = "accounts.Account"
# ===============================================================================
